plugins {
    id 'org.springframework.boot' version '3.4.2'   // 스프링 부트 플러그인 추가
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'  // 의존성 관리 플러그인 추가
    id 'java'  // Java 플러그인 적용
    id 'jacoco'
    id 'org.sonarqube' version '3.5.0.2730'
}

group = 'kr.co.devs32'  // 그룹명
version = '1.0'  // 버전 설정
sourceCompatibility = '21'  // JDK 버전 설정

repositories {
    mavenCentral()  // Maven 중앙 저장소에서 의존성 다운로드
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'  // 스프링 부트 웹 스타터
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'  // JPA 관련 스타터
    implementation 'org.mariadb.jdbc:mariadb-java-client'
//    implementation 'org.springframework.boot:spring-boot-starter-security'  // 스프링 시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-validation'  // 유효성 검사
    implementation 'org.springframework.boot:spring-boot-starter-actuator'  // Actuator 스타터 (모니터링 및 관리용)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.0' // Swagger
    implementation 'software.amazon.awssdk:s3:2.30.33' // cloudflare

    // lombok
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'  // 테스트 스타터


    implementation 'org.projectlombok:lombok:1.18.30'       // Lombok 추가
    annotationProcessor 'org.projectlombok:lombok:1.18.30'  // Lombok을 annotation processor로 설정
    testImplementation 'org.projectlombok:lombok:1.18.30'   // 테스트 환경에서도 Lombok 사용 가능하게 설정
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

test {
    useJUnitPlatform()  // JUnit5 플랫폼 사용
}

bootJar {
    enabled = true
    archiveFileName = 'app.jar'
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

tasks.test {
    finalizedBy(tasks.jacocoTestReport)
}
